openapi: 3.0.0
info:
  title: Auth Express Example
  description: Auth Express Example
  version: 1.0.0
servers:
  - url: http://localhost:${PORT}
    description: Local server
tags:
  - name: Auth
    description: Auth
  - name: Users
    description: Users
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    inputUser:
      type: object
      properties:
        _id:
          type: string
          description: User ID
        name:
          type: string
          description: User name
        email:
          type: string
          description: User email
        password:
          type: string
          description: User password
      required:
        - name
        - email
        - password
      example:
        name: John Doe
        email: 'john@example.com'
        password: '123456'
    outputUser:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/inputUser'
      example:
        name: John Doe
        email: john@example.com
        password: d74ff0ee8da3b9806b18c877dbf29bbde50b5bd8e4dad7a3a725000feb82e8f1
      required:
        - name
        - email
        - password
paths:
  /api/auth/register:
    post:
      summary: Register
      description: Register
      tags:
        - Auth
      responses:
        201:
          description: User Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/inputUser'
                  token:
                    type: string
                    description: JWT token
        500:
          description: Internal Server Error
          content:
            string:
              example: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/outputUser'
  /api/auth/login:
    post:
      summary: Login
      description: Login with email and password
      tags:
        - Auth
      responses:
        200:
          description: User Logged
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token
        400:
          description: email or password invalid or not found
          content:
            string:
              example: Bad Request
        404:
          description: user not found
          content:
            string:
              example: Not Found
        500:
          description: Internal Server Error
          content:
            string:
              example: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: JWT token
  /api/users:
    get:
      summary: Get all users
      description: Get all users
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: Users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/outputUser'
        401:
          description: Unauthorized
          content:
            string:
              example: Unauthorized
        500:
          description: Internal Server Error
          content:
            string:
              example: Internal Server Error
    post:
      summary: Create user
      description: Create user
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      responses:
        201:
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputUser'
        401:
          description: Unauthorized
          content:
            string:
              example: Unauthorized
        500:
          description: Internal Server Error
          content:
            string:
              example: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputUser'
  /api/users/{userId}:
    get:
      summary: Get user by id
      description: Get user by id
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputUser'
        401:
          description: Unauthorized
          content:
            string:
              example: Unauthorized
        404:
          description: User not found
          content:
            string:
              example: Not Found
        500:
          description: Internal Server Error
          content:
            string:
              example: Internal Server Error
    put:
      summary: Update user by id
      description: Update user by id
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: User id
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputUser'
        401:
          description: Unauthorized
          content:
            string:
              example: Unauthorized
        404:
          description: User not found
          content:
            string:
              example: Not Found
        500:
          description: Internal Server Error
          content:
            string:
              example: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/inputUser'
    patch:
      summary: Update specific fields of user by id
      description: Update specific fields of user by id
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: User id
      responses:
        200:
          description: User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/outputUser'
        401:
          description: Unauthorized
          content:
            string:
              example: Unauthorized
        404:
          description: User not found
          content:
            string:
              example: Not Found
        500:
          description: Internal Server Error
          content:
            string:
              example: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: User name
                email:
                  type: string
                  description: User email
                password:
                  type: string
                  description: User password
    delete:
      summary: Delete user by id
      description: Delete user by id
      tags:
        - Users
      security:
        - bearerAuth: [ ]
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: User id
      responses:
        204:
          description: User deleted
        401:
          description: Unauthorized
          content:
            string:
              example: Unauthorized
        404:
          description: User not found
          content:
            string:
              example: Not Found
        500:
          description: Internal Server Error
          content:
            string:
              example: Internal Server Error
